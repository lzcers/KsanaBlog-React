{
  "extends": [
    "airbnb" // 使用 airbnb 规范
  ],
  "env": {
    "browser": true, // 设置环境，否则 document.xxx 会报错
    "node": true
  },
  "settings": {
    "import/resolver": {
      "@": { "someConfig": "value" }
    }
  },
  "rules": {
    "no-debugger": [0], // debugger 还是要的
    "curly": [2, "multi"],
    "max-len": [1, { "code": 150 }],
    "no-restricted-syntax": [0], // for 语句还是要用的
    "no-plusplus": [0], // 允许使用一元运算符
    "prefer-destructuring": [0], // 是否使用解构赋值都可以
    "react/no-danger": [0], // 我很绝望，但是真的有需要用到这个
    "react/sort-comp": [
      1,
      {
        "order": ["static-methods", "lifecycle", "/^on.+$/", "everything-else", "render"],
        "groups": {
          "lifecycle": [
            "displayName",
            "propTypes",
            "contextTypes",
            "childContextTypes",
            "mixins",
            "statics",
            "defaultProps",
            "state", // 我只是想调整下 state 和 constructor 的顺序
            "constructor",
            "getDefaultProps",
            "getInitialState",
            "getChildContext",
            "getDerivedStateFromProps",
            "componentWillMount",
            "UNSAFE_componentWillMount",
            "componentDidMount",
            "componentWillReceiveProps",
            "UNSAFE_componentWillReceiveProps",
            "shouldComponentUpdate",
            "componentWillUpdate",
            "UNSAFE_componentWillUpdate",
            "getSnapshotBeforeUpdate",
            "componentDidUpdate",
            "componentDidCatch",
            "componentWillUnmount"
          ]
        }
      }
    ],
    "react/prop-types": [0],
    "function-paren-newline": [0],
    "no-confusing-arrow": [0],
    "class-methods-use-this": [0], // 推荐方法中没有 this 的不要提示转写成静态方法
    "jsx-a11y/anchor-is-valid": [
      "error",
      {
        "components": ["Link"],
        "specialLink": ["to"],
        "aspects": ["noHref", "preferButton"]
      }
    ], // 这条规则主要是让锚点有效, 组件为Link
    "prefer-template": [0], // 允许使用 + 拼接字符串
    "no-unused-vars": ["error", { "argsIgnorePattern": "_" }],
    "linebreak-style": ["error", "windows"],
    "semi": ["error", "never"],
    "consistent-return": [0],
    "no-prototype-builtins": [0], // 不禁止使用原型内置的方法
    "object-curly-newline": [0], // 不强制在花括号内使用一致的换行符
    "no-unused-expressions": ["error", { "allowTernary": true, "allowShortCircuit": true }], // 允许使用三元运算符,短路运算
    "arrow-parens": [2, "as-needed", { "requireForBlockBody": false }], // 箭头函数单参数允许不带圆括号, 函数体为语句块也不强制要求单参数带圆括号
    "comma-dangle": [2, "never"], // 对象字面量项尾不能有逗号
    "import/no-unresolved": 0, // 允许使用 webpack alias
    "import/extensions": 0, // 省略扩展名
    "react/jsx-filename-extension": ["error", { "extensions": [".js", ".jsx"] }],
    "import/no-extraneous-dependencies": 0, // 每个 jsx 都要引用 React 但不一定使用
    "import/no-named-as-default": 0,
    "import/no-duplicates": 0,
    "import/no-named-as-default-member": 0
  },
  "parser": "babel-eslint", // 采用 balbel-eslint 来做解析器，支持新的语法
  "parserOptions": {
    "sourceType": "module", // 指定源码格式，支持 export 和 import 来导出并引用文件
    "ecmaFeatures": {
      // 添加ES特性支持，使之能够识别ES6语法
      "jsx": true
    }
  }
}
